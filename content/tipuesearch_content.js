var tipuesearch = {"pages": [{'title': '簡介', 'text': 'CAD2020倉儲 \n 分組倉儲 \xa0\xa0 分組網站 \n 使用SSH維護網站教學 \n \n \n 40823112 \n', 'tags': '', 'url': '簡介.html'}, {'title': '上課內容', 'text': '\n', 'tags': '', 'url': '上課內容.html'}, {'title': '上課筆記', 'text': '\n', 'tags': '', 'url': '上課筆記.html'}, {'title': '何謂ANSIC', 'text': 'ANSIC 是指美國國家標準協會(ANSI) 對C語言的標準 ，而另一個 ISOC 則是國際標準化組織(ISO)的標準 \n', 'tags': '', 'url': '何謂ANSIC.html'}, {'title': 'W2', 'text': 'Tracert 路由跟蹤 :\xa0[tracert IP位置]\xa0 \n 可已得知與特定主機連線會經過多少主機 EX:輸入IP位置可以得知中華電信主機連到自己電腦會經過多少主機或路由器 \n', 'tags': '', 'url': 'W2.html'}, {'title': 'W4', 'text': 'Wink 3 介紹 \n 使用wink 3截圖時按鍵盤上的 Pause \n \n 輸出影片 \n 1.按下專案設定 設定完後確認 \n \n \n 2. 按下編譯 \n \n 3.按下觀看編譯結果後影片會在資料夾內 \n \n \n', 'tags': '', 'url': 'W4.html'}, {'title': 'W5', 'text': '何謂 API \n 應用程式介面 ( A pplication  P rogramming  I nterface): \n \n 指各種軟體組件之間一套明確定義的溝通方法。 簡單來說， 就像是讓你用的一個函式庫，呼叫你想要使用的函式，並給予相對應的參數，函式便回傳給你結果。 \n EX:你在餐廳內跟服務生點了牛排，服務生再從廚房將餐點放在你的桌上。 而服務生就是API。 \n \n WebAPI  \n 在 Web Application 的開發情境下的 API 被稱為 Web API，在 Web API 作用時，客戶端和伺服器端會透過 HTTP 通訊協定來進行請求與回應。使用 Web API 的一方是客戶端，可能是瀏覽器、手機或者穿戴式設備等等，客戶端會向伺服器端發出請求，要求執行某個 CRUD 動作。 \n', 'tags': '', 'url': 'W5.html'}, {'title': 'W7', 'text': 'TCC \n 下載完TCC與路徑後，將程式丟入編輯器中並存.c檔，再利用Tool ->Go執行程式 \n Test1 :\xa0 hello.c \n \n Test 2 :\xa0ANSI.c \n \n', 'tags': '', 'url': 'W7.html'}, {'title': '上課作業', 'text': '\n', 'tags': '', 'url': '上課作業.html'}, {'title': 'HW1', 'text': '利用Inventor 2020與Solidwork 2017來比對 Solidworks 零件繪圖練習1.pdf 在不同繪圖軟體是否有不同 \n \n \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': '先以 Inventor繪出立體圖，再 利用 FOR迴圈 產生 64 個不同尺寸組合的零件 \n \n', 'tags': '', 'url': 'HW2.html'}, {'title': '錯誤修正', 'text': '', 'tags': '', 'url': '錯誤修正.html'}, {'title': 'TCC Start.bat 路徑修正', 'text': '在設定Start.bat時 \n path=%Disk%:;%path_python%;%path_portablegit%;%path_julia%;%path_tcc%;%path_gnuplot%;%path%; \n 不能與 \n path=%Disk%:;%path_python%;%path_git%; \n 合併在一起，否則TCC會無法運作 \n \n', 'tags': '', 'url': 'TCC Start.bat 路徑修正.html'}, {'title': '小組Meeting', 'text': 'W10: \n \n 討論後決定製作: \n \n \n W11: \n \n \n \n', 'tags': '', 'url': '小組Meeting.html'}, {'title': 'CoppeliaSim 翻譯', 'text': '', 'tags': '', 'url': 'CoppeliaSim 翻譯.html'}, {'title': 'Simulation Setting 模擬設定', 'text': 'Simulation passes per frame 每偵模擬次數:  刷新螢幕前，主角本已執行X次。 Pause when simulation time higher than [S] 模擬時間>S時暫停:  模擬時能在特定時間暫停。 Pause on script error 腳本錯誤暫停:  腳本發生錯誤時，模擬暫停。 Full screen at simulation start 模擬開始時全屏:  模擬已全屏方式呈現。 Reset scene to initial slate 場景重置為初始化狀態:  所有對象在模擬完後重置為其初始狀態。 Remove new objects 刪除新對象:  在模擬運行間添加的東西將在模擬結束後刪除。', 'tags': '', 'url': 'Simulation Setting 模擬設定.html'}, {'title': 'Scene Object Properties 場景對象屬性', 'text': 'Shape : \n \n Adjust color 調整顏色:  允許編輯形狀的顏色。 Show edges with angle [deg] 顯示邊緣角度:  以黑色顯示邊，顯示的邊取決於指定的角度。 Blackface culling 背面剔除:  當一個形狀有內面和外面，啟用時不會顯示內部面。 Wireframe 線框:  圖形顯示為線框。 Invert faces 反轉面:  內面變外面，相反的外面變內面，凸形則會變非凸形。 Adjust texture 調整紋理:  形狀與紋理相關聯時，將以帶紋理顯示 Clear texture (selection) 快速紋理(選擇):  將紋理貼圖應用於所選的形狀。能使對象變得更逼真。 Quick texture (selection) 清除紋理(選擇):  所選的形狀中刪除紋理。 View/modify geometry查看/修改幾何:  能調整選定形狀的網格的各種參數。 Show dynamic properties dialog 顯示動態屬性對話框 :  切換動態屬性對話框。 \n Common : \n \n', 'tags': '', 'url': 'Scene Object Properties 場景對象屬性.html'}, {'title': 'Calculation Modules 模組計算', 'text': 'Collision 碰撞檢測 : \n \n Enable all collision detections 啟用所有碰撞檢測:  啟用或關掉所有已標記碰撞對象的碰撞檢測 Add new collision object 添加新的碰撞對象:  指定兩個物體進行碰撞檢測 Explicit handling 顯示處理:  是否顯示處理所選的碰撞對象 Collider/Collodee color changes 碰撞更改碰撞器/體顏色:  啟用或關閉碰撞器/體在碰撞期間的顏色改變 Calc. coll. cont. (shapes only) 計算線圈、輪廓(僅限形狀):  啟用則將對碰撞物體執行詳盡的碰撞檢測 Adjust contour color 調整輪廓顏色:  可調整碰撞輪廓線的顏色 Contour widh [pt] 輪廓寬度:  調整碰撞輪廓線的寬度 \n \n', 'tags': '', 'url': 'Calculation Modules 模組計算.html'}]};